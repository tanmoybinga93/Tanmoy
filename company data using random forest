library(randomForest)
library(MASS)
library(caret)
library(ggplot2)
company_data<- read.csv(file.choose())
View(company_data)
str(company_data)
attach(company_data)

mean(company_data$Sales)

set.seed(123)

hist(company_data$Sales,main = "sales of company data",xlim = c(0,20),
     breaks = c(seq(10,20,30),col= c("blue","red","green","violet"))

highsales<- ifelse(company_data$Sales<9,"NO","YES") # If greater than 8 then high sales else low
View(highsales)

CD<- data.frame(company_data[2:11],highsales)
View(CD)
str(CD)

table(CD$highsales)  # NO: 286, YES: 114

#Data partition 
set.seed(123)
ind<- sample(2,nrow(CD),replace = TRUE, prob = c(0.7,0.3))
View(ind)

train<- CD[ind==1,]

train_highsales<- as.factor(train$highsales)

test<- CD[ind==2,]

test_highsales<- as.factor(test$highsales)


set.seed(213)
ran_for<- randomForest(as.factor(highsales)~.,data=train)
View(ran_for)
plot(ran_for)

#each tree node 
attributes(ran_for)

#prediction and confusion matrix on training data 
pred1<- predict(ran_for, train)
View(pred1)
head(pred1)
plot(pred1)

pred_fact<- as.factor(pred1)

confusionMatrix(pred_fact,train_highsales)  # Accuracy : 1, 95% CI: (0.9871,1), P-value: 2.2e-16, sensitivity = 1, specificity = 1

#prediction with test data 

pred2<- predict(ran_for,test)

confusionMatrix(pred2,test_highsales) ## Accuracy : 0.79, 95% CI: (0.7056,0.8615), P-value: 0.0001052, sensitivity = 0.9737, specificity = 0.4359 

getTree(ran_for, 1, labelVar = TRUE)

legend("topright",colnames(ran_for$err.rate),col=1:3,cex=0.8,fill=1:3)

for_mean <- mean(CD$highsales==predict(ran_for))

for_mean  # 0.6275

varImpPlot(ran_for)

varImpPlot(ran_for,Sort = T, n.var = 5, main = "Top 5 -Variable Importance") # price, Advertising, Comprice, Age, Income

partialPlot(ran_for, train, Price)

partialPlot(ran_for, train, Advertising)

partialPlot(ran_for, train, CompPrice)

partialPlot(ran_for, train, Age)

partialPlot(ran_for, train, Income)

